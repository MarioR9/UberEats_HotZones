{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/App.js\";\nimport React from 'react';\nimport MapView from 'react-native-maps';\nimport PulseLoader from 'react-native-pulse-loader';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      _onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hidden = _React$useState4[0],\n      setHidden = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      lat = _React$useState6[0],\n      setLat = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      lon = _React$useState8[0],\n      setLon = _React$useState8[1];\n\n  var _React$useState9 = React.useState('#ffffff3a'),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      busyColor = _React$useState10[0],\n      setBusyColor = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      searchAnimation = _React$useState12[0],\n      setAnimation = _React$useState12[1];\n\n  var localHost = \"LOCAL_IPADRESS_HERE\";\n\n  handleFetch = function handleFetch() {\n    setAnimation(false);\n    var data = {\n      location: value\n    };\n    var options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"http://\" + localHost + \":3000/api\", options).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      (function () {\n        setAnimation(false);\n      });\n\n      setLat(parseFloat(data.lat));\n      setLon(parseFloat(data.lon));\n      var numbers = data.response.map(function (num) {\n        return parseInt(num.bussynessPercentage.replace(/[^a-zA-Z0-9 ]/g, \"\"));\n      });\n      var removeNaN = numbers.filter(function (value) {\n        return !Number.isNaN(value);\n      });\n      var total = removeNaN.reduce(function (a, b) {\n        return a + b;\n      }) / removeNaN.length;\n\n      if (total > 10 && total < 35) {\n        setBusyColor('#02bd0c2a');\n      } else if (total > 36 && total < 65) {\n        setBusyColor('#e7d42d4f');\n      } else {\n        setBusyColor('#fc000046');\n      }\n\n      console.log(\"received.\");\n    }).catch(function (err) {\n      console.log(\"Error Reading data \" + err);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, lat == 0 && lon == 0 ? React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    showsCompass: true,\n    zoomControlEnabled: true,\n    showsTraffic: true,\n    loadingEnabled: true,\n    showsUserLocation: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, searchAnimation == true ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(PulseLoader, {\n    borderColor: \"#02ff23a8\",\n    backgroundColor: \"#c915ba5e\",\n    pulseMaxSize: 700,\n    size: 0,\n    avatar: './assets/SearchLogo.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })) : null, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, hidden == false ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setHidden(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: 130,\n      height: 130\n    },\n    source: require(\"./assets/search.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })) : React.createElement(TextInput, {\n    style: {\n      marginTop: 30,\n      width: 120,\n      height: 30,\n      right: -120\n    },\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    placeholder: \"City,State\",\n    placeholderTextColor: \"gray\",\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _this.handleFetch();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      top: 80,\n      width: 130,\n      height: 130\n    },\n    source: require(\"./assets/SearchLogo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })))) : React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    region: {\n      latitude: lat,\n      longitude: lon,\n      latitudeDelta: 0.0143,\n      longitudeDelta: 0.0134\n    },\n    showsCompass: true,\n    zoomControlEnabled: true,\n    showsTraffic: true,\n    loadingEnabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView.Circle, {\n    center: {\n      latitude: lat,\n      longitude: lon\n    },\n    radius: 600,\n    strokeWidth: 3,\n    strokeColor: busyColor,\n    fillColor: busyColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/App.js"],"names":["React","MapView","PulseLoader","App","useState","value","onChangeText","hidden","setHidden","lat","setLat","lon","setLon","busyColor","setBusyColor","searchAnimation","setAnimation","localHost","handleFetch","data","location","options","method","headers","body","JSON","stringify","fetch","then","resp","json","parseFloat","numbers","response","map","num","parseInt","bussynessPercentage","replace","removeNaN","filter","Number","isNaN","total","reduce","a","b","length","console","log","catch","err","flex","position","left","top","width","height","require","marginTop","right","text","latitude","longitude","latitudeDelta","longitudeDelta"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MapView from'react-native-maps';\nimport PulseLoader from 'react-native-pulse-loader';\nimport {\n  Image, \n  TouchableOpacity, \n  TextInput, \n  View, \n  Alert\n       }\nfrom 'react-native';\n\n\nexport default function App() {\n  //using Hooks To set input text \n  const [value, onChangeText] = React.useState('');\n  const [hidden, setHidden] = React.useState(false);\n  const [lat, setLat] = React.useState(0)\n  const [lon, setLon] = React.useState(0)\n  const [busyColor, setBusyColor] = React.useState('#ffffff3a')\n  const [searchAnimation, setAnimation] = React.useState(false)\n\n  const localHost = \"LOCAL_IPADRESS_HERE\"\n\n  handleFetch=()=>{\n    setAnimation(false) //fix async issu with animation\n    const data = { location: value}\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`http://${localHost}:3000/api`, options)\n    .then(resp=>resp.json())\n    .then(data=>{()=>{ setAnimation(false) }\n     \n      // Alert.alert(\n      //   'TEST',\n      //   'Information Collected',\n      //   [\n      //     {text: 'OK', onPress: () =>console.log(\"ok pressed\") },\n      //   ]\n      // );\n      \n      // console.log(data)\n      setLat(parseFloat(data.lat))\n      setLon(parseFloat(data.lon))\n\n      let numbers = data.response.map(num => parseInt(num.bussynessPercentage.replace(/[^a-zA-Z0-9 ]/g, \"\")))\n      let removeNaN = numbers.filter(value => {\n        return !Number.isNaN(value);\n        })\n      let total = removeNaN.reduce((a, b) => a + b) / removeNaN.length\n      \n      // console.log(\"array of numbers \" + numbers)\n      // console.log(\"array of numbers to removed \" + removeNaN)\n      // console.log(\"total % \" + total)\n\n      // Radious color key.\n      if(total > 10 && total <35){\n        setBusyColor('#02bd0c2a')\n      }else if(total > 36 && total < 65){\n        setBusyColor('#e7d42d4f')       \n      }else{\n        setBusyColor('#fc000046')\n      }\n      console.log(\"received.\")\n      \n    }).catch(err => {\n      // Error handling\n      console.log(\"Error Reading data \" + err);\n    });\n  }\n \n  return (\n\n    <View style={{flex: 1}}>\n      {\n      lat == 0 && lon == 0 ? \n  \n      <MapView style={{flex: 1}}\n            showsCompass={true}\n            zoomControlEnabled={true}\n            showsTraffic={true}\n            loadingEnabled={true} \n            showsUserLocation={true}\n      >         \n           {\n            searchAnimation == true\n            ?\n          <View>\n              <PulseLoader\n              borderColor='#02ff23a8'\n              backgroundColor='#c915ba5e'\n              pulseMaxSize={700}\n              size={0}\n              avatar={'./assets/SearchLogo.png'}\n              />\n              \n          </View>\n            :\n            null\n          }     \n          <View>\n            {\n            hidden == false\n            ?\n            <TouchableOpacity onPress={()=>setHidden(true)}>\n                <Image style={{\n                  position: 'absolute', \n                  left: 0, \n                  top: 0,\n                  width: 130, \n                  height: 130}} \n                  source={require('./assets/search.png')} />\n            </TouchableOpacity>\n            :\n            <TextInput\n            style={{ \n              marginTop: 30,\n              width: 120, \n              height: 30, \n              right: -120}}\n            onChangeText={text => onChangeText(text)}\n            placeholder=\"City,State\"\n            placeholderTextColor=\"gray\"\n            value={value}\n            />\n            }\n            <TouchableOpacity onPress={()=>this.handleFetch()}>\n                <Image style={\n                  {position: 'absolute', \n                  left: 0, \n                  top: 80,\n                  width: 130, \n                  height: 130}} \n                  source={require('./assets/SearchLogo.png')} />\n            </TouchableOpacity>\n          </View>   \n         \n      </MapView>  \n          :\n      \n      <MapView \n          style={{flex: 1}}\n              region={{\n                latitude: lat,\n                longitude: lon,\n                latitudeDelta: 0.0143,\n                longitudeDelta: 0.0134\n              }}\n              showsCompass={true}\n              zoomControlEnabled={true}\n              showsTraffic={true}\n              loadingEnabled={true}\n        > \n      <MapView.Circle\n          center={{\n            latitude: lat,\n            longitude: lon,\n          }}\n          radius={600}\n          strokeWidth={3}\n          strokeColor = {busyColor}\n          fillColor={busyColor}\n        />  \n        \n      </MapView> \n      \n        }\n      \n  \n    </View>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}