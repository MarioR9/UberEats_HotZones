{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/node_modules/react-native-pulse-loader/PulseLoader.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Pulse from \"./Pulse\";\n\nvar LocationPulseLoader = function (_React$Component) {\n  _inherits(LocationPulseLoader, _React$Component);\n\n  var _super = _createSuper(LocationPulseLoader);\n\n  function LocationPulseLoader(props) {\n    var _this;\n\n    _classCallCheck(this, LocationPulseLoader);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      circles: []\n    };\n    _this.counter = 1;\n    _this.setInterval = null;\n    _this.anim = new Animated.Value(1);\n    return _this;\n  }\n\n  _createClass(LocationPulseLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCircleInterval();\n    }\n  }, {\n    key: \"setCircleInterval\",\n    value: function setCircleInterval() {\n      this.setInterval = setInterval(this.addCircle.bind(this), this.props.interval);\n      this.addCircle();\n    }\n  }, {\n    key: \"addCircle\",\n    value: function addCircle() {\n      this.setState({\n        circles: [].concat(_toConsumableArray(this.state.circles), [this.counter])\n      });\n      this.counter++;\n    }\n  }, {\n    key: \"onPressIn\",\n    value: function onPressIn() {\n      var _this2 = this;\n\n      Animated.timing(this.anim, {\n        toValue: this.props.pressInValue,\n        duration: this.props.pressDuration,\n        easing: this.props.pressInEasing\n      }).start(function () {\n        return clearInterval(_this2.setInterval);\n      });\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut() {\n      Animated.timing(this.anim, {\n        toValue: 1,\n        duration: this.props.pressDuration,\n        easing: this.props.pressOutEasing\n      }).start(this.setCircleInterval.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          size = _this$props.size,\n          avatar = _this$props.avatar,\n          avatarBackgroundColor = _this$props.avatarBackgroundColor,\n          interval = _this$props.interval;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'transparent',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 4\n        }\n      }, this.state.circles.map(function (circle) {\n        return React.createElement(Pulse, _extends({\n          key: circle\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 6\n          }\n        }));\n      }), React.createElement(TouchableOpacity, {\n        activeOpacity: 1,\n        onPressIn: this.onPressIn.bind(this),\n        onPressOut: this.onPressOut.bind(this),\n        style: {\n          transform: [{\n            scale: this.anim\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: avatar\n        },\n        style: {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor: avatarBackgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      })));\n    }\n  }]);\n\n  return LocationPulseLoader;\n}(React.Component);\n\nexport { LocationPulseLoader as default };\nLocationPulseLoader.propTypes = {\n  interval: PropTypes.number,\n  size: PropTypes.number,\n  pulseMaxSize: PropTypes.number,\n  avatar: PropTypes.string.isRequired,\n  avatarBackgroundColor: PropTypes.string,\n  pressInValue: PropTypes.number,\n  pressDuration: PropTypes.number,\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  getStyle: PropTypes.func\n};\nLocationPulseLoader.defaultProps = {\n  interval: 2000,\n  size: 100,\n  pulseMaxSize: 250,\n  avatar: undefined,\n  avatarBackgroundColor: 'white',\n  pressInValue: 0.8,\n  pressDuration: 150,\n  pressInEasing: Easing.in,\n  pressOutEasing: Easing.in,\n  borderColor: '#D8335B',\n  backgroundColor: '#ED225B55',\n  getStyle: undefined\n};","map":{"version":3,"sources":["/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/node_modules/react-native-pulse-loader/PulseLoader.js"],"names":["React","Component","PropTypes","Pulse","LocationPulseLoader","props","state","circles","counter","setInterval","anim","Animated","Value","setCircleInterval","addCircle","bind","interval","setState","timing","toValue","pressInValue","duration","pressDuration","easing","pressInEasing","start","clearInterval","pressOutEasing","size","avatar","avatarBackgroundColor","flex","backgroundColor","justifyContent","alignItems","map","circle","onPressIn","onPressOut","transform","scale","uri","width","height","borderRadius","propTypes","number","pulseMaxSize","string","isRequired","borderColor","getStyle","func","defaultProps","undefined","Easing","in"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,OAAOC,KAAP;;IAGqBC,mB;;;;;AACpB,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AADG,KAAb;AAIA,UAAKC,OAAL,GAAe,CAAf;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,IAAL,GAAY,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAZ;AATkB;AAUlB;;;;wCAEmB;AACnB,WAAKC,iBAAL;AACA;;;wCAEmB;AACnB,WAAKJ,WAAL,GAAmBA,WAAW,CAAC,KAAKK,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAD,EAA4B,KAAKV,KAAL,CAAWW,QAAvC,CAA9B;AACA,WAAKF,SAAL;AACA;;;gCAEW;AACX,WAAKG,QAAL,CAAc;AAAEV,QAAAA,OAAO,+BAAM,KAAKD,KAAL,CAAWC,OAAjB,IAA0B,KAAKC,OAA/B;AAAT,OAAd;AACA,WAAKA,OAAL;AACA;;;gCAEW;AAAA;;AACXG,MAAAA,QAAQ,CAACO,MAAT,CAAgB,KAAKR,IAArB,EAA2B;AAC1BS,QAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe,YADM;AAE1BC,QAAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB,aAFK;AAG1BC,QAAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWmB;AAHO,OAA3B,EAIGC,KAJH,CAIS;AAAA,eAAMC,aAAa,CAAC,MAAI,CAACjB,WAAN,CAAnB;AAAA,OAJT;AAKA;;;iCAEY;AACZE,MAAAA,QAAQ,CAACO,MAAT,CAAgB,KAAKR,IAArB,EAA2B;AAC1BS,QAAAA,OAAO,EAAE,CADiB;AAE1BE,QAAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB,aAFK;AAG1BC,QAAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWsB;AAHO,OAA3B,EAIGF,KAJH,CAIS,KAAKZ,iBAAL,CAAuBE,IAAvB,CAA4B,IAA5B,CAJT;AAKA;;;6BAEQ;AAAA;;AAAA,wBACkD,KAAKV,KADvD;AAAA,UACAuB,IADA,eACAA,IADA;AAAA,UACMC,MADN,eACMA,MADN;AAAA,UACcC,qBADd,eACcA,qBADd;AAAA,UACqCd,QADrC,eACqCA,QADrC;AAGR,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACZe,UAAAA,IAAI,EAAE,CADM;AAEZC,UAAAA,eAAe,EAAE,aAFL;AAGZC,UAAAA,cAAc,EAAE,QAHJ;AAIZC,UAAAA,UAAU,EAAE;AAJA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,KAAK5B,KAAL,CAAWC,OAAX,CAAmB4B,GAAnB,CAAuB,UAACC,MAAD;AAAA,eACvB,oBAAC,KAAD;AACC,UAAA,GAAG,EAAEA;AADN,WAEK,MAAI,CAAC/B,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADuB;AAAA,OAAvB,CANF,EAaC,oBAAC,gBAAD;AACC,QAAA,aAAa,EAAE,CADhB;AAEC,QAAA,SAAS,EAAE,KAAKgC,SAAL,CAAetB,IAAf,CAAoB,IAApB,CAFZ;AAGC,QAAA,UAAU,EAAE,KAAKuB,UAAL,CAAgBvB,IAAhB,CAAqB,IAArB,CAHb;AAIC,QAAA,KAAK,EAAE;AACNwB,UAAAA,SAAS,EAAE,CAAC;AACXC,YAAAA,KAAK,EAAE,KAAK9B;AADD,WAAD;AADL,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUC,oBAAC,KAAD;AACC,QAAA,MAAM,EAAE;AAAE+B,UAAAA,GAAG,EAAEZ;AAAP,SADT;AAEC,QAAA,KAAK,EAAE;AACNa,UAAAA,KAAK,EAAEd,IADD;AAENe,UAAAA,MAAM,EAAEf,IAFF;AAGNgB,UAAAA,YAAY,EAAEhB,IAAI,GAAC,CAHb;AAINI,UAAAA,eAAe,EAAEF;AAJX,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVD,CAbD,CADD;AAoCA;;;;EAlF+C9B,KAAK,CAACC,S;;SAAlCG,mB;AAqFrBA,mBAAmB,CAACyC,SAApB,GAAgC;AAC9B7B,EAAAA,QAAQ,EAAEd,SAAS,CAAC4C,MADU;AAE9BlB,EAAAA,IAAI,EAAE1B,SAAS,CAAC4C,MAFc;AAG9BC,EAAAA,YAAY,EAAE7C,SAAS,CAAC4C,MAHM;AAI9BjB,EAAAA,MAAM,EAAE3B,SAAS,CAAC8C,MAAV,CAAiBC,UAJK;AAK9BnB,EAAAA,qBAAqB,EAAE5B,SAAS,CAAC8C,MALH;AAM9B5B,EAAAA,YAAY,EAAElB,SAAS,CAAC4C,MANM;AAO9BxB,EAAAA,aAAa,EAAEpB,SAAS,CAAC4C,MAPK;AAQ9BI,EAAAA,WAAW,EAAEhD,SAAS,CAAC8C,MARO;AAS9BhB,EAAAA,eAAe,EAAE9B,SAAS,CAAC8C,MATG;AAU9BG,EAAAA,QAAQ,EAAEjD,SAAS,CAACkD;AAVU,CAAhC;AAaAhD,mBAAmB,CAACiD,YAApB,GAAmC;AACjCrC,EAAAA,QAAQ,EAAE,IADuB;AAEjCY,EAAAA,IAAI,EAAE,GAF2B;AAGjCmB,EAAAA,YAAY,EAAE,GAHmB;AAIjClB,EAAAA,MAAM,EAAEyB,SAJyB;AAKjCxB,EAAAA,qBAAqB,EAAE,OALU;AAMjCV,EAAAA,YAAY,EAAE,GANmB;AAOjCE,EAAAA,aAAa,EAAE,GAPkB;AAQjCE,EAAAA,aAAa,EAAE+B,MAAM,CAACC,EARW;AASjC7B,EAAAA,cAAc,EAAE4B,MAAM,CAACC,EATU;AAUjCN,EAAAA,WAAW,EAAE,SAVoB;AAWjClB,EAAAA,eAAe,EAAE,WAXgB;AAYjCmB,EAAAA,QAAQ,EAAEG;AAZuB,CAAnC","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Image, TouchableOpacity, Animated, Easing } from 'react-native';\nimport Pulse from './Pulse';\n\n\nexport default class LocationPulseLoader extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tcircles: []\n\t\t};\n\n\t\tthis.counter = 1;\n\t\tthis.setInterval = null;\n\t\tthis.anim = new Animated.Value(1);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setCircleInterval();\n\t}\n\n\tsetCircleInterval() {\n\t\tthis.setInterval = setInterval(this.addCircle.bind(this), this.props.interval);\n\t\tthis.addCircle();\n\t}\n\n\taddCircle() {\n\t\tthis.setState({ circles: [...this.state.circles, this.counter] });\n\t\tthis.counter++;\n\t}\n\n\tonPressIn() {\n\t\tAnimated.timing(this.anim, {\n\t\t\ttoValue: this.props.pressInValue,\n\t\t\tduration: this.props.pressDuration,\n\t\t\teasing: this.props.pressInEasing,\n\t\t}).start(() => clearInterval(this.setInterval));\n\t}\n\n\tonPressOut() {\n\t\tAnimated.timing(this.anim, {\n\t\t\ttoValue: 1,\n\t\t\tduration: this.props.pressDuration,\n\t\t\teasing: this.props.pressOutEasing,\n\t\t}).start(this.setCircleInterval.bind(this));\n\t}\n\n\trender() {\n\t\tconst { size, avatar, avatarBackgroundColor, interval } = this.props;\n\n\t\treturn (\n\t\t\t<View style={{\n\t\t\t\tflex: 1,\n\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t}}>\n\t\t\t\t{this.state.circles.map((circle) => (\n\t\t\t\t\t<Pulse\n\t\t\t\t\t\tkey={circle}\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tactiveOpacity={1}\n\t\t\t\t\tonPressIn={this.onPressIn.bind(this)}\n\t\t\t\t\tonPressOut={this.onPressOut.bind(this)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttransform: [{\n\t\t\t\t\t\t\tscale: this.anim\n\t\t\t\t\t\t}]\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsource={{ uri: avatar }}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\t\theight: size,\n\t\t\t\t\t\t\tborderRadius: size/2,\n\t\t\t\t\t\t\tbackgroundColor: avatarBackgroundColor\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t);\n\t}\t\n}\n\nLocationPulseLoader.propTypes = {\n  interval: PropTypes.number,\n  size: PropTypes.number,\n  pulseMaxSize: PropTypes.number,\n  avatar: PropTypes.string.isRequired,\n  avatarBackgroundColor: PropTypes.string,\n  pressInValue: PropTypes.number,\n  pressDuration: PropTypes.number,\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  getStyle: PropTypes.func,\n};\n\nLocationPulseLoader.defaultProps = {\n  interval: 2000,\n  size: 100,\n  pulseMaxSize: 250,\n  avatar: undefined,\n  avatarBackgroundColor: 'white',\n  pressInValue: 0.8,\n  pressDuration: 150,\n  pressInEasing: Easing.in,\n  pressOutEasing: Easing.in,\n  borderColor: '#D8335B',\n  backgroundColor: '#ED225B55',\n  getStyle: undefined,\n};\n\n"]},"metadata":{},"sourceType":"module"}