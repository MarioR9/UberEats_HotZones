{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/node_modules/react-native-pulse-loader/Pulse.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Pulse = function (_React$Component) {\n  _inherits(Pulse, _React$Component);\n\n  var _super = _createSuper(Pulse);\n\n  function Pulse(props) {\n    var _this;\n\n    _classCallCheck(this, Pulse);\n\n    _this = _super.call(this, props);\n    _this.anim = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(Pulse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Animated.timing(this.anim, {\n        toValue: 1,\n        duration: this.props.interval,\n        easing: Easing.in\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          pulseMaxSize = _this$props.pulseMaxSize,\n          borderColor = _this$props.borderColor,\n          backgroundColor = _this$props.backgroundColor,\n          getStyle = _this$props.getStyle;\n      return React.createElement(View, {\n        style: [styles.circleWrapper, {\n          width: pulseMaxSize,\n          height: pulseMaxSize,\n          marginLeft: -pulseMaxSize / 2,\n          marginTop: -pulseMaxSize / 2\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 4\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.circle, {\n          borderColor: borderColor,\n          backgroundColor: backgroundColor,\n          width: this.anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [size, pulseMaxSize]\n          }),\n          height: this.anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [size, pulseMaxSize]\n          }),\n          borderRadius: pulseMaxSize / 2,\n          opacity: this.anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [1, 0]\n          })\n        }, getStyle && getStyle(this.anim)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return Pulse;\n}(React.Component);\n\nexport { Pulse as default };\nvar styles = StyleSheet.create({\n  circleWrapper: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    left: width / 2,\n    top: height / 2\n  },\n  circle: {\n    borderWidth: 4 * StyleSheet.hairlineWidth\n  }\n});","map":{"version":3,"sources":["/Users/macone/Development/portfolioProyects/UberEats/UberEats_HotZones/node_modules/react-native-pulse-loader/Pulse.js"],"names":["React","Component","Dimensions","get","height","width","Pulse","props","anim","Animated","Value","timing","toValue","duration","interval","easing","Easing","in","start","size","pulseMaxSize","borderColor","backgroundColor","getStyle","styles","circleWrapper","marginLeft","marginTop","circle","interpolate","inputRange","outputRange","borderRadius","opacity","StyleSheet","create","justifyContent","alignItems","position","left","top","borderWidth","hairlineWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Animated, Easing, Dimensions } from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\n\nexport default class Pulse extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.anim = new Animated.Value(0);\n\t}\n\n\tcomponentDidMount() {\n\t\tAnimated.timing(this.anim, {\n\t\t\ttoValue: 1,\n\t\t\tduration: this.props.interval,\n\t\t\teasing: Easing.in,\n\t\t})\n\t\t.start();\n\t}\n\n\trender() {\n\t\tconst { size, pulseMaxSize, borderColor, backgroundColor, getStyle } = this.props;\n\n\t\treturn (\n\t\t\t<View style={[styles.circleWrapper, {\n\t\t\t\twidth: pulseMaxSize,\n\t\t\t\theight: pulseMaxSize,\n\t\t\t\tmarginLeft: -pulseMaxSize/2,\n\t\t\t\tmarginTop: -pulseMaxSize/2,\n\t\t\t}]}>\n\t\t\t\t<Animated.View\n\t\t\t\t\tstyle={[styles.circle, {\n\t\t\t\t\t\tborderColor,\n\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\twidth: this.anim.interpolate({\n\t\t\t\t\t\t\tinputRange: [0, 1],\n\t\t\t\t\t\t\toutputRange: [size, pulseMaxSize]\n\t\t\t\t\t\t}),\n\t\t\t\t\t\theight: this.anim.interpolate({\n\t\t\t\t\t\t\tinputRange: [0, 1],\n\t\t\t\t\t\t\toutputRange: [size, pulseMaxSize]\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tborderRadius: pulseMaxSize/2,\n\t\t\t\t\t\topacity: this.anim.interpolate({\n\t\t\t\t\t\t\tinputRange: [0, 1],\n\t\t\t\t\t\t\toutputRange: [1, 0]\n\t\t\t\t\t\t})\n\t\t\t\t\t}, getStyle && getStyle(this.anim)]}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\t\n}\n\n\nconst styles = StyleSheet.create({\n\tcircleWrapper: {\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tposition: 'absolute',\n\t\tleft: width/2,\n\t\ttop: height/2,\n\t},\n\tcircle: {\n\t\tborderWidth: 4 * StyleSheet.hairlineWidth,\n\t},\n});"]},"metadata":{},"sourceType":"module"}